import{_ as f}from"./preload-helper.D7D0289G.js";function g(r={}){const{immediate:s=!1,onNeedRefresh:w,onOfflineReady:a,onRegistered:d,onRegisteredSW:o,onRegisterError:i}=r;let t,n;const c=async(e=!0)=>{await n};async function l(){if("serviceWorker"in navigator){if(t=await f(async()=>{const{Workbox:e}=await import("./workbox-window.prod.es5.B9K5rw8f.js");return{Workbox:e}},[]).then(({Workbox:e})=>new e("/pwa/sw.js",{scope:"/pwa/",type:"classic"})).catch(e=>{i?.(e)}),!t)return;t.addEventListener("activated",e=>{(e.isUpdate||e.isExternal)&&window.location.reload()}),t.addEventListener("installed",e=>{e.isUpdate||a?.()}),t.register({immediate:s}).then(e=>{o?o("/pwa/sw.js",e):d?.(e)}).catch(e=>{i?.(e)})}}return n=l(),c}g({immediate:!0,onRegisteredSW(r){console.log("SW registered: ",r)},onOfflineReady(){console.log("PWA application ready to work offline")},onNeedRefresh(){console.log("PWA needs refresh")},onRegisterError(r){console.error("SW registration error",r)}});
